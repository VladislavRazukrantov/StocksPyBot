from datetime import datetime

import telebot
import finnhub
import openpyxl
from telebot import types

bot = telebot.TeleBot('5707455690:AAH_dra68o20IGv0q94Bz7O1m3mHdoS73dw')
finnhub_client = finnhub.Client(api_key="cdvig5iad3i78d1oq5j0cdvig5iad3i78d1oq5jg")
keyboard = types.InlineKeyboardMarkup()

name_of_stock = ''
amount_of_stocks = 0

title = ''
amount = 0
price = 0

name_column = 1 #–∏–º—è –∞–∫—Ü–∏–∏, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Ü–µ–Ω–∞ - –¥–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
amount_column = 2
price_column = 3

list_of_symbols = []

def init(id):
    wb = openpyxl.load_workbook('usr.xlsx') #–ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ä–∞–±–æ—á–µ–π –∫–Ω–∏–≥–∏
    wb.create_sheet(title=str(id))  #—Å–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç
    sh = wb[str(id)]
    current_row_cell = sh.cell(row=1, column=1) #–¥–æ—Å—Ç—É–ø –∫ —è—á–µ–π–∫–µ
    current_profit_cell = sh.cell(row=1, column=2) #–¥–æ—Å—Ç—É–ø –∫ —è—á–µ–π–∫–µ, —Ç—É—Ç –±—É–¥–µ—Ç –ø—Ä–∏–±—ã–ª—å –æ–±—â–∞—è
    current_row_cell.value = 2   #–ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    current_profit_cell.value = 0 #–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø—Ä–∏–±—ã–ª–∏ –Ω–µ—Ç
    wb.save('usr.xlsx') #—Å–æ—Ö—Ä–∞–Ω—è–µ–º


@bot.message_handler(commands=['start', 'help']) #—Ä–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
def start(message):
    #message - json –æ–±—ä–µ–∫—Ç, —Ö—Ä–∞–Ω—è—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ, —á–∞—Ç–µ –∏ —Å–æ–æ–±—â–µ–Ω–∏–∏
    init(message.from_user.id)
    start_message = '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –≠—Ç–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç –í–∞–º —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –∞–∫—Ü–∏—è–º–∏!\n\n' + \
                    '–ö–æ–º–∞–Ω–¥—ã:\n\n' + \
                    '/portfolio - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å\n' + \
                    '/quotations - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ \n'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    key_portfolio = types.KeyboardButton(text='–ü–æ—Ä—Ç—Ñ–µ–ª—å') #–¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    key_quotations = types.KeyboardButton(text='–ö–æ—Ç–∏—Ä–æ–≤–∫–∏')
    markup.add(key_portfolio, key_quotations)
    bot.send_message(message.chat.id, start_message, reply_markup=markup)  #—Ç—Ä–µ—Ç–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç - –º–µ–Ω—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –∫–Ω–æ–ø–æ—á–Ω—É—é


@bot.message_handler(commands=['back'])
def back(message):
    start_message = '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –≠—Ç–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç –í–∞–º —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –∞–∫—Ü–∏—è–º–∏!\n\n' + \
                    '–ö–æ–º–∞–Ω–¥—ã:\n\n' + \
                    '/portfolio - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å\n' + \
                    '/quotations - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ \n'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    key_portfolio = types.KeyboardButton(text='–ü–æ—Ä—Ç—Ñ–µ–ª—å')
    key_quotations = types.KeyboardButton(text='–ö–æ—Ç–∏—Ä–æ–≤–∫–∏')
    #key_graphics = types.KeyboardButton(text='–ì—Ä–∞—Ñ–∏–∫–∏')
    markup.add(key_portfolio, key_quotations)
    bot.send_message(message.chat.id, start_message, reply_markup=markup)


@bot.message_handler(commands=['portfolio'])
def portfolio(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    key_show_stocks = types.KeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ü–∏–∏')  #–∫–Ω–æ–ø–∫–∏
    key_new_stock = types.KeyboardButton(text='–ö—É–ø–∏—Ç—å –∞–∫—Ü–∏–∏')
    key_sell_stock = types.KeyboardButton(text='–ü—Ä–æ–¥–∞—Ç—å –∞–∫—Ü–∏–∏')
    key_back_to_menu = types.KeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')
    markup.add(key_show_stocks, key_new_stock, key_sell_stock, key_back_to_menu) #–¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É", reply_markup=markup)


@bot.message_handler(commands=['quotations'])
def quotations(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ü–∏–∏')
    bot.register_next_step_handler(message, get_title_of_stock_for_quotations) #–ø–µ—Ä–µ–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–ª–µ–¥ —à–∞–≥, –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


@bot.message_handler(content_types=['text']) #–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
def random_answers(message):
    if message.text == '–ü–æ—Ä—Ç—Ñ–µ–ª—å':
        portfolio(message)
    # if message.text == '–ì—Ä–∞—Ñ–∏–∫–∏':
    #     graphics(message)
    if message.text == '–ö–æ—Ç–∏—Ä–æ–≤–∫–∏':
        quotations(message)
    if message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ü–∏–∏':
        show_stocks(message)
    if message.text == '–ö—É–ø–∏—Ç—å –∞–∫—Ü–∏–∏':
        add_stock(message)
    if message.text == '–ü—Ä–æ–¥–∞—Ç—å –∞–∫—Ü–∏–∏':
        sell_stocks(message)
    if message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é':
        back(message)


# –ü–û–†–¢–§–û–õ–ò–û
def show_stocks(message): #–ü–µ—Ä–µ—Ö–æ–¥–∏–º –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ü–∏–∏
    global current_row #—Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–æ–∫–∞
    global current_profit
    global name_column
    global price_column

    wb = openpyxl.load_workbook('usr.xlsx') #–ø–æ–ª—É—á–∞–µ–º –Ω–∞—à—É —Ä–∞–±–æ—á—É—é –∫–Ω–∏–≥—É
    sh = wb[str(message.from_user.id)]      #–ø–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω—É–∂–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    current_row_cell = sh.cell(row=1, column=1) #–ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —è—á–µ–π–∫–∏ 1:1
    current_profit_cell = sh.cell(row=1, column=2)

    current_row = current_row_cell.value
    current_profit = current_profit_cell.value
    if current_row == 2: #–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —É –Ω–∞—Å –¥–≤–∞
        answer = 'üíº –ü–æ—Ä—Ç—Ñ–µ–ª—å\n\n–ü—É—Å—Ç–æ\n\n'
        if (current_profit >0):
            answer += '–ü—Ä–∏–±—ã–ª—å –∑–∞ –≤—Ä–µ–º—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: ' + str(current_profit) +  ' $' + '\n'
        else:
            answer += '–£–±—ã—Ç–æ–∫ –∑–∞ –≤—Ä–µ–º—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: ' + str(current_profit) + ' $' + '\n'
        bot.send_message(message.chat.id, answer)
    else:
        answer = 'üíº –ü–æ—Ä—Ç—Ñ–µ–ª—åüí∞üí∞üí∞ \n\n'
        for i in range(2, sh.max_row + 1):
            answer += str(i - 1) + ". "
            n = sh.cell(row=i, column=name_column) #–Ω–æ–º–µ—Ä –≤ —Ç–∞–±–ª–∏—Ü–µ - 1, –º—ã —ç—Ç–æ –≤—ã—à–µ –æ–±—ä—è–≤–∏–ª–∏
            a = sh.cell(row=i, column=amount_column) #–ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
            p = sh.cell(row=i, column=price_column)
            answer += (str(n.value) + ': ').ljust(6) + (str(a.value) + ' —à—Ç. —Ü–µ–Ω–∞: ').ljust(12) + str(p.value) + '$ \n\n'
        if (current_profit > 0):
            answer += '–ü—Ä–∏–±—ã–ª—å –∑–∞ –≤—Ä–µ–º—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: ' + str(current_profit) + ' $' + '\n'
        else:
            answer += '–£–±—ã—Ç–æ–∫ –∑–∞ –≤—Ä–µ–º—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: ' + str(current_profit) + ' $' + '\n'
        answer += '\n'
        bot.send_message(message.chat.id, answer)


def add_stock(message): #–ø–æ–ø–∞–¥–∞–µ–º –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫—É–ø–∏—Ç—å –∞–∫—Ü–∏–∏
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ü–∏–∏')
    bot.register_next_step_handler(message, get_title_buy) #–ø–µ—Ä–µ—Ö–æ–¥–∏–º –¥–∞–ª—å—à–µ


def sell_stocks(message): #–ø–æ–ø–∞–¥–∞–µ–º –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –ø—Ä–æ–¥–∞—Ç—å –∞–∫—Ü–∏–∏
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ü–∏–∏')
    bot.register_next_step_handler(message, get_title_sell)
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ–º–æ—Å—Ç—å: –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ –æ—à–∏–±–∫–∞ –∏ –µ—â–µ —Ä–∞–∑


# –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏
def get_title_buy(message):
    stocks_variants = finnhub_client.symbol_lookup(message.text)  #–∏—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if stocks_variants['count'] == 0:
        bot.send_message(message.chat.id, '–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–∫—Ü–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!')
        #bot.register_next_step_handler(message, get_title_buy)
    else:
        answer = '–ú—ã –Ω–∞—à–ª–∏ –ø–æ—Ö–æ–∂–∏–µ –∞–∫—Ü–∏–∏, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö:\n'
        for stockEx in stocks_variants["result"]:
            answer += ('‚Ä¢ ' + stockEx["symbol"] + '(' + stockEx["description"] + ', ' + stockEx["type"] + ')' + '\n')
            list_of_symbols.append(stockEx["symbol"])
        bot.send_message(message.chat.id, answer) #–≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –¥–∞–ª—å—à–µ –ø–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
        bot.register_next_step_handler(message, get_title_buy_next)


def get_title_buy_next(message):
    global title #–¥–ª—è –∏–º–µ–Ω–∏ –∞–∫—Ü–∏–∏
    if message.text not in list_of_symbols:
        bot.send_message(message.chat.id, '–£–∫–∞–∑–∞–Ω–Ω–∞—è –∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
        #bot.register_next_step_handler(message, get_title_buy_next)
    else:
        title = message.text
        list_of_symbols.clear()
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π')
        bot.register_next_step_handler(message, get_amount_buy)


def get_amount_buy(message):
    global amount #–¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    try:
        amount = int(message.text) #–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –ø–æ–∫—É–ø–∫–∏\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —Ü–µ–Ω–∞ - —á–∏—Å–ª–æ')
        bot.register_next_step_handler(message, get_price_buy)
    except: #–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–Ω –≤–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π)
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ - —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
        bot.register_next_step_handler(message, get_amount_buy)


def get_price_buy(message): #–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ü–µ–Ω—É –ø–æ–∫—É–ø–∫–∏ –∏ –ø–æ–ø–∞–¥–∞–µ—Ç —Å—é–¥–∞
    global price
    try:
        price = int(message.text)
        buy(message)     #—á—Ç–æ –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –ø–æ–∫—É–ø–∫–∞
    except:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∞–∫—Ü–∏–∏\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —Ü–µ–Ω–∞ - —á–∏—Å–ª–æ')
        bot.register_next_step_handler(message, get_price_buy)


# –ø–æ–ø–∞–¥–∞–µ–º –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∞–∫—Ü–∏–∏
def get_title_sell(message):
    global title #–¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –∞–∫—Ü–∏–∏
    title = message.text
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ - —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
    bot.register_next_step_handler(message, get_amount_sell)


def get_amount_sell(message): #–ø–æ–ø–∞–ª–∏ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    global amount
    try:
        amount = int(message.text) #–ø–æ–ª—É—á–∞–µ–º —á–∏—Å–ª–æ
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –ø—Ä–æ–¥–∞–∂–∏\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —Ü–µ–Ω–∞ - —á–∏—Å–ª–æ')
        bot.register_next_step_handler(message, get_price_sell)
    except: # –µ—Å–ª–∏ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ, —Ç–æ –µ—â–µ —Ä–∞–∑ –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ - —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
        bot.register_next_step_handler(message, get_amount_sell)


def get_price_sell(message): # –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤–≤–µ–ª–∏ —Ü–µ–Ω—É
    global price
    try:
        price = int(message.text)
        sell(message) #–ø—Ä–æ–¥–∞–∂–∞, —á—Ç–æ –ø—Ä–∏ —ç—Ç–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
    except:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∞–∫—Ü–∏–∏\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —Ü–µ–Ω–∞ - —á–∏—Å–ª–æ')
        bot.register_next_step_handler(message, get_price_sell)


# –ø–æ–∫—É–ø–∫–∞ –∏ –ø—Ä–æ–¥–∞–∂–∞ –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º
def buy(message):
    global title #–Ω—É–∂–Ω–æ –æ–±—ä—è–≤–∏—Ç—å –∏–Ω–∞—á–µ –Ω–µ —Å–º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
    global amount
    global price
    global current_row #—Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–æ–∫–∞

    global name_column
    global price_column
    global amount_column

    if amount <= 0 or price <= 0:  #—Ç–æ —á—Ç–æ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        answer = 'üíº –î–æ—Ä–æ–≥–æ–π –∏–Ω–≤–µ—Å—Ç–æ—Ä!\n\n '
        answer += '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π –∏ —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–µ–ª–∏—á–∏–Ω–∞–º–∏. '
        bot.send_message(message.chat.id, answer)
        show_stocks(message) # –≤—ã–≤–æ–¥–∏–º –ø–æ—Ä—Ç—Ñ–µ–ª—å
        return

    wb = openpyxl.load_workbook('usr.xlsx')
    sh = wb[str(message.from_user.id)]  #–ø–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    current_row_cell = sh.cell(row=1, column=1)
    current_row = current_row_cell.value #—Å–º–æ—Ç—Ä–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ —è—á–µ–π–∫–∏ 1:1

    alreadyExist, row_value_existed = is_existed(sh) #—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 2 –∑–Ω–∞—á–µ–Ω–∏—è: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∞–∫—Ü–∏—è
    # –∏ —Å—Ç—Ä–æ–∫–∞ –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞–π–¥–µ–Ω–∞ –∞–∫—Ü–∏—è

    if not alreadyExist: # –µ—Å–ª–∏ –∞–∫—Ü–∏–∏ –¥–æ —ç—Ç–æ–≥–æ –Ω–µ –±—ã–ª–æ
        current_row_cell = sh.cell(row=1, column=1) #–ø–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é —è—á–µ–π–∫—É, –≤ 1:1 —Ç–∞ —Å—Ç—Ä–æ–∫–∞, –∫—É–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –±—É–¥–µ–º
        t = sh.cell(row=current_row, column=name_column) #–ø–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —è—á–µ–π–∫–∞–º
        a = sh.cell(row=current_row, column=amount_column)
        p = sh.cell(row=current_row, column=price_column)
        t.value = title #–ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        a.value = amount
        p.value = price
        current_row_cell.value = current_row + 1 #—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —á–∏—Å–ª–æ –≤ 1:1 –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É

    else: # –µ—Å–ª–∏ –∞–∫—Ü–∏—è –µ—Å—Ç—å
        a = sh.cell(row=row_value_existed, column=amount_column) #—Ç—É—Ç –ø–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Ü–µ–Ω—É, –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–¥–æ
        p = sh.cell(row=row_value_existed, column=price_column)
        tmp = int(a.value)
        a.value = tmp + int(amount) #–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ + —Ç–æ, —á—Ç–æ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        p.value = (int(p.value) * tmp + int(price) * int(amount)) / (tmp + int(amount))
    #–Ω–æ–≤–∞—è —Ü–µ–Ω–∞ = (—Å—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ * —Å—Ç–∞—Ä–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ + —Ü–µ–Ω–∞ * –∫–æ–ª-–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) / (—Å—Ç–∞—Ä–æ–µ + –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
    wb.save('usr.xlsx')  # –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    title = ''
    amount = 0
    price = 0
    show_stocks(message) # –≤—ã–≤–æ–¥–∏–º –ø–æ—Ä—Ç—Ñ–µ–ª—å


def sell(message): #–ø—Ä–æ–¥–∞–∂–∞
    global title
    global amount
    global price
    global current_profit

    global name_column
    global price_column
    global amount_column

    if amount <= 0 or price <= 0:
        answer = 'üíº –î–æ—Ä–æ–≥–æ–π –∏–Ω–≤–µ—Å—Ç–æ—Ä!\n\n '
        answer += ' –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π –∏ —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–µ–ª–∏—á–∏–Ω–∞–º–∏. '
        bot.send_message(message.chat.id, answer)
        show_stocks(message)
        return

    wb = openpyxl.load_workbook('usr.xlsx') #–ø–æ–ª—É—á–∞–µ–º –Ω–∞—à—É —Ä–∞–±–æ—á—É—é –∫–Ω–∏–≥—É
    sh = wb[str(message.from_user.id)] #–æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    current_profit_cell = sh.cell(row=1, column=2)
    current_profit = current_profit_cell.value #—è—á–µ–π–∫–∞ —Å –ø—Ä–∏–±—ã–ª—å—é
    alreadyExist, row_value_existed = is_existed(sh) #–ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∞–∫—Ü–∏—è –∏ –µ—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ –∫–∞–∫–∞—è —Å—Ç—Ä–æ–∫–∞

    if alreadyExist: #–µ—Å–ª–∏ –µ—Å—Ç—å
        a = sh.cell(row=row_value_existed, column=amount_column) #–ø–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —è—á–µ–π–∫–∞–º –¥–∞–Ω–Ω–æ–π –∞–∫—Ü–∏–∏
        p = sh.cell(row=row_value_existed, column=price_column)
        t = sh.cell(row=row_value_existed, column=name_column)
        tmp = a.value
        if a.value < int(amount): #—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å —Ç–µ–º, —á—Ç–æ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            answer = 'üíº –î–æ—Ä–æ–≥–æ–π –∏–Ω–≤–µ—Å—Ç–æ—Ä!\n\n '
            answer += ' –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å, –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –µ—Å—Ç—å —É –í–∞—Å –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ. '
            bot.send_message(message.chat.id, answer)
            show_stocks(message)
            return
        a.value = tmp - int(amount) #–Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ = —Å—Ç–∞—Ä–æ–µ - –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        print(a.value)
        if a.value == 0:  #—É–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤ –ª–∏—Å—Ç–µ –∏ —É–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫—É—é —Å—Ç—Ä–æ–∫—É
            wb = openpyxl.load_workbook('usr.xlsx')  # –ø–æ–ª—É—á–∞–µ–º –Ω–∞—à—É —Ä–∞–±–æ—á—É—é –∫–Ω–∏–≥—É
            # print(id_user)
            sh = wb[str(message.from_user.id)]  # –ø–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω—ã–π –ª–∏—Å—Ç –ø–æ id
            if row_value_existed == sh.max_row:  # –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω–∞–¥–æ –∑–∞–Ω—É–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—è—è
                m = sh.cell(row=row_value_existed, column=name_column)  # –ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —è—á–µ–µ–∫
                b = sh.cell(row=row_value_existed, column=amount_column)
                l = sh.cell(row=row_value_existed, column=price_column)
                print(row_value_existed)
                m.value = None  # –∑–∞–Ω—É–ª—è–µ–º –∏—Ö
                b.value = None
                l.value = None
                # print(a.value, n.value, p.value)
                current_row_cell = sh.cell(row=1, column=1)
                current_row_cell.value = int(current_row_cell.value) - 1  # —É–º–µ–Ω—å—à–∞–µ–º –Ω–∞ 1 –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ 1:1
                wb.save('usr.xlsx')
            else:# —Å —è—á–µ–π–∫–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã—à–µ —É–¥–∞–ª—è–µ–º–æ–π –º—ã –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, –∞ –≤–æ—Ç –Ω–∏–∂–µ —É–¥–∞–ª—è–µ–º–æ–π —Å—Ç—Ä–æ–∫–∏ –º—ã –±–µ—Ä–µ–º
                m = sh.cell(row=row_value_existed + 1, column=name_column)  # –ø–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —è—á–µ–π–∫–∞–º —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏
                b = sh.cell(row=row_value_existed + 1, column=amount_column)
                l = sh.cell(row=row_value_existed + 1, column=price_column)

                column_of_name = [m.value]  # —Å–ø–∏—Å–∫–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è —è—á–µ–µ–∫
                column_of_amount = [b.value]
                column_of_price = [l.value]

                for i in range(row_value_existed + 2, sh.max_row + 1):
                    m = sh.cell(row=i, column=name_column)  # –ø–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Å–ª–µ–¥ —è—á–µ–π–∫–∞–º
                    b = sh.cell(row=i, column=amount_column)
                    l = sh.cell(row=i, column=price_column)

                    column_of_name.append(m.value)  # –≤—Å—Ç–∞–≤–∫–∞ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ –∫–æ–Ω–µ—Ü
                    column_of_amount.append(b.value)
                    column_of_price.append(l.value)

                column_of_name.reverse()  # –º–µ–Ω—è–µ–º –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π
                column_of_amount.reverse()
                column_of_price.reverse()

                for i in range(row_value_existed, sh.max_row):  # –Ω–∞—á–∏–Ω–∞—è –æ—Ç —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—É—é —É–¥–∞–ª—è–µ–º –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π
                    m = sh.cell(row=i,
                                column=name_column)  # –ø–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø —Å–Ω–∞—á–∞–ª–∞ –∫ —Å—Ç—Ä–æ–∫–µ, –∫–æ—Ç–æ—Ä—É—é —É–¥–∞–ª—è–µ–º, –ø–æ—Ç–æ–º –Ω–∏–∂–µ –∏ —Ç.–¥.
                    b = sh.cell(row=i, column=amount_column)
                    l = sh.cell(row=i, column=price_column)
                    m.value = column_of_name.pop()  # –¥–ª—è —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–¥–ª—è —ç—Ç–æ–≥–æ —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–ª–∏)
                    b.value = column_of_amount.pop()  # —Ç–æ –µ—Å—Ç—å —Å—Ç—Ä–æ–∫—É –∫–æ—Ç–æ—Ä—É—é —É–¥–∞–ª—è–µ–º –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ
                    l.value = column_of_price.pop()

                m = sh.cell(row=sh.max_row,
                            column=name_column)  # –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É –∑–∞–Ω—É–ª—è–µ–º, –ø–æ—Å–∫–æ–ª—å–∫—É –≤—Å–µ –≤–≤–µ—Ä—Ö –Ω–∞ 1 –ø–µ—Ä–µ—à–ª–æ
                b = sh.cell(row=sh.max_row, column=amount_column)
                l = sh.cell(row=sh.max_row, column=price_column)
                m.value = None
                b.value = None
                l.value = None

                current_row_cell = sh.cell(row=1, column=1)
                current_row_cell.value = int(current_row_cell.value) - 1  # —É–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
                wb.save('usr.xlsx')
        else:
            wb.save('usr.xlsx')

        answer = 'üíº –í—Ä–µ–º—è - –¥–µ–Ω—å–≥–∏\n\n'
        answer += '–í—ã –ø—Ä–æ–¥–∞–ª–∏ –∞–∫—Ü–∏–∏ ' + t.value + ' –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ ' + str(amount) + ' \n\n'
        if a.value > 0:
            answer += '–û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏ ' + t.value + ' –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ ' + str(a.value) + ' \n\n'
        profit = int(price) * int(amount) - int(p.value) * int(amount)
        current_profit_cell.value += profit
        if profit > 0:
            answer += '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π —Å–¥–µ–ª–∫–æ–π! –ü—Ä–∏–±—ã–ª—å –æ—Ç —Å–¥–µ–ª–∫–∏: ' + str(profit) + ' $' + '\n'
        else:
            answer += '–£–±—ã—Ç–æ–∫ –æ—Ç —Å–¥–µ–ª–∫–∏: ' + str(profit) + ' $' + '\n'
        if (current_profit_cell.value > 0):
            answer += '–ü—Ä–∏–±—ã–ª—å –∑–∞ –≤—Ä–µ–º—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: ' + str(current_profit_cell.value) +  ' $'+ '\n'
        else:
            answer += '–£–±—ã—Ç–æ–∫ –∑–∞ –≤—Ä–µ–º—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: ' + str(current_profit_cell.value) + ' $' +'\n'
        bot.send_message(message.chat.id, answer)
    else:
        answer = 'üíº –í –ø–æ—Ä—Ç—Ñ–µ–ª–µ\n\n–ù–µ—Ç –∞–∫—Ü–∏–π —Å —Ç–∏—Ç—Ä–æ–º ' + title
        bot.send_message(message.chat.id, answer)
    wb.save('usr.xlsx')
    title = ''
    amount = 0
    price = 0


def is_existed(sh): #—Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    current_row_cell = sh.cell(row=1, column=1) #–ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —è—á–µ–π–∫–∏
    max_row = current_row_cell.value #—ç—Ç–æ —Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ —É –Ω–∞—Å –±—É–¥–µ—Ç
    alreadyExist = False

    cntr = 1
    for row in sh.iter_rows(max_row=max_row): #–∏—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º
        for cell in row: #cell - —è—á–µ–π–∫–∞
            if str(cell.value) == title: #—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —è—á–µ–π–∫–∏ —Å –∏–º–µ–Ω–µ–º –∞–∫—Ü–∏–∏
                alreadyExist = True  #—É–∂–µ —ç—Ç–∞ –∞–∫—Ü–∏—è –µ—Å—Ç—å
                break
        if alreadyExist: #–µ—Å–ª–∏ –∞–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –Ω–µ –Ω–∞–¥–æ
            break
        cntr += 1 #–Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏, –≥–¥–µ –∞–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è
    return alreadyExist, cntr

# –ö–û–¢–ò–†–û–í–ö–ò
def get_title_of_stock_for_quotations(message): #–ø–æ—Å–ª–µ –≤–≤–µ–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∞–∫—Ü–∏–∏ –∏–¥–µ–º —Å—é–¥–∞
    global list_of_symbols
    stocks_variants = finnhub_client.symbol_lookup(message.text) #–Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∞–∫—Ü–∏–∏ –ø–æ –≤–≤–æ–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if stocks_variants['count'] == 0:
        bot.send_message(message.chat.id, '–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–∫—Ü–∏–π')
    else:
        answer = '–ú—ã –Ω–∞—à–ª–∏ –ø–æ—Ö–æ–∂–∏–µ –∞–∫—Ü–∏–∏, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö:\n'
        for stockEx in stocks_variants["result"]:
            answer += ('‚Ä¢ ' + stockEx["symbol"] + '(' + stockEx["description"] + ', ' + stockEx["type"] + ')' + '\n')
            list_of_symbols.append(stockEx["symbol"])
        bot.send_message(message.chat.id, answer)
        bot.register_next_step_handler(message, get_title_of_stock_for_quotations_next) #–ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–¥–µ–º –¥–∞–ª—å—à–µ


def get_title_of_stock_for_quotations_next(message):
    global list_of_symbols
    if message.text not in list_of_symbols:
        bot.send_message(message.chat.id, '–£–∫–∞–∑–∞–Ω–Ω–∞—è –∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
        #bot.register_next_step_handler(message, get_title_of_stock_for_quotations_next)
    else:
        prices = finnhub_client.quote(message.text) #–ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–æ—Ç–∏—Ä–æ–≤–∫–µ
        answer = '–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ' + str(prices["c"]) + ' $ \n' \
                                                       '–ù–∞–∏–≤—ã—Å—à–∞—è —Ü–µ–Ω–∞ —Å–µ–≥–æ–¥–Ω—è: ' + str(prices["h"]) + ' $ \n' \
                                                                                                       '–ù–∞–∏–º–µ–Ω—å—à–∞—è —Ü–µ–Ω–∞ —Å–µ–≥–æ–¥–Ω—è: ' + str(
            prices["l"]) + ' $ \n' \
                           '–í—Ä–µ–º—è: ' + str(datetime.fromtimestamp(prices["t"])) + '\n'

        bot.send_message(message.chat.id, answer)
        list_of_symbols.clear()

bot.polling(none_stop=True)
